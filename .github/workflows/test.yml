name: Test

on:
  push:
    branches: [ master, main, work ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        shell: [bash, zsh]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up shell environment
      run: |
        # Install required shells
        sudo apt-get update
        sudo apt-get install -y zsh bash shellcheck

        # Install additional tools for testing
        sudo apt-get install -y git vim curl wget

    - name: Make scripts executable
      run: |
        chmod +x scripts/*.sh
        find scripts -name "*.sh" -exec chmod +x {} \;
        if [[ -d "scripts/bin" ]]; then
          find scripts/bin -type f -exec chmod +x {} \;
        fi

    - name: Run shellcheck linting
      run: |
        ./scripts/shellcheck.sh

    - name: Test script syntax
      run: |
        # Test all shell scripts for syntax errors
        find . -name "*.sh" -type f -exec bash -n {} \;
        find . -name "*.zsh" -type f -exec zsh -n {} \;

    - name: Run dependency checks
      run: |
        ./scripts/check-deps.sh --core

    - name: Test configuration validation
      run: |
        # Run CI-specific tests that work without installation
        ./scripts/tests/test_ci.sh

    - name: Test symlink creation (dry run)
      run: |
        # Test symlink script without actually creating symlinks
        bash -n ./scripts/symlink.sh

    - name: Test setup script (non-interactive)
      run: |
        # Test setup script syntax and help
        ./scripts/setup.sh --help

    - name: Test health check system
      run: |
        # Test health check script
        ./scripts/health-check.sh --help

    - name: Test performance profiling
      run: |
        # Test performance script
        ./scripts/profile-shell.sh --help

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Run shellcheck
      run: |
        chmod +x scripts/shellcheck.sh
        ./scripts/shellcheck.sh

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check for secrets in code
      run: |
        # Check for potential secrets (basic patterns)
        ! grep -r -i "password\|secret\|token\|key.*=" . --include="*.sh" --include="*.zsh" --include="*.md" || echo "Found potential secrets - please review"

    - name: Check file permissions
      run: |
        # Ensure no scripts have world-writable permissions
        ! find . -name "*.sh" -perm -002 | grep -q . || (echo "Found world-writable scripts" && exit 1)

    - name: Check for private config references
      run: |
        # Ensure private config is properly handled
        grep -r "private.zsh" . --include="*.sh" --include="*.zsh" --include="*.md" || echo "No private config references found"

  documentation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check README exists
      run: |
        test -f README.md || (echo "README.md not found" && exit 1)

    - name: Check changelog exists
      run: |
        test -f CHANGELOG.md || echo "CHANGELOG.md not found (run scripts/changelog.sh init)"

    - name: Check documentation completeness
      run: |
        # Check if essential documentation exists
        grep -q "Private Configuration" README.md || echo "Private config documentation missing"
        grep -q "setup.sh" README.md || echo "Setup documentation missing"
        test -f CLAUDE.md || echo "CLAUDE.md not found"

  compatibility:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh bash git vim

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS should have these by default, but ensure they're available
        which zsh bash git vim || echo "Some tools missing"

    - name: Test cross-platform compatibility
      run: |
        # Test that scripts work on different platforms
        bash -n scripts/setup.sh
        bash -n scripts/validate.sh
        bash -n scripts/symlink.sh

        # Test that config files are valid
        zsh -n zsh/.zshrc || echo ".zshrc syntax test failed"

    - name: Test shell performance
      run: |
        # Quick performance test
        chmod +x scripts/profile-shell.sh
        ./scripts/profile-shell.sh --startup || echo "Performance test skipped"
